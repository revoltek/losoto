name: Build and upload to PyPI

# Only build and upload when a new release tag is created
# on:
#   push:
#     tags:
#       - "v[0-9]+.[0-9]+.[0-9]+"
#       - "v[0-9]+.[0-9]+.[0-9]+[a-z]+[0-9]+"
# Alternatively, build on every branch push, tag push, and pull request change
on: [push] #, pull_request]

jobs:

  build_package:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          # Needed for `setuptools-scm`
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - name: Build wheel
        run: pipx run build --wheel

      - uses: actions/upload-artifact@v4
        with:
          path: dist

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #       with:
  #         # Needed for `setuptools-scm`
  #         fetch-depth: 0

  #     - name: Build sdist
  #       run: pipx run build --sdist

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: tarball
  #         path: dist/*.tar.gz

  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest] #, macos-latest]

  #   steps:
  #     - uses: actions/checkout@v5
  #       with:
  #         # Needed for `setuptools-scm`
  #         fetch-depth: 0

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v3.2

  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-${{ matrix.os }}
  #         path: wheelhouse/*.whl

  upload_package:
    name: Upload package to PyPI
    runs-on: ubuntu-latest
    needs: build_package
    environment:
      name: pypi
      # url: https://pypi.org/p/losoto
      # For testing, use TestPyPI
      url: https://test.pypi.org/p/losoto
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    # Upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # Alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist  # put artifacts where next action expects them to be
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1.13
        with:
          # For testing, use TestPyPI
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
